<?xml version="1.0" encoding="utf-8"?>
<configuration>
	<system.webServer>
		<staticContent>
			<!-- IIS returns a 404 for extensions it doesn't know about so we have to add webmanifest -->
			<mimeMap fileExtension=".webmanifest" mimeType="application/manifest+json" />
			<!-- Make sure we have the correct JSON mime type, ie not text/json or anything -->
			<remove fileExtension=".json" />
			<mimeMap fileExtension=".json" mimeType="application/json" />
		</staticContent>
		<rewrite>
			<allowedServerVariables>
				<add name="HTTP_ACCEPT_ENCODING" />
			</allowedServerVariables>
			<rules>
				<!--
					A 'hack' for IIS < 1803 (e.g. on Windows Server 2016) to make brotli compression prioritised over gzip.
					See https://docs.microsoft.com/en-us/iis/extensions/iis-compression/using-iis-compression#before-iis-100-version-1803
				-->
				<rule name="Prioritize Brotli">
					<match url=".*" />
					<conditions>
						<add input="{HTTP_ACCEPT_ENCODING}" pattern="\bbr(?!;q=0)\b" />
					</conditions>
					<serverVariables>
						<set name="HTTP_ACCEPT_ENCODING" value="br" />
					</serverVariables>
				</rule>
				<!-- Redirect index.html requests to the folder, but only when the index.html file exists -->
				<rule name="wwwroot-index-redirect" stopProcessing="true">
					<match url="(.+)\/index\.html$" />
					<conditions>
						<add input="{DOCUMENT_ROOT}\wwwroot\{R:1}\index.html" matchType="IsFile" />
					</conditions>
					<action type="Redirect" url="https://{HTTP_HOST}/{R:1}/" />
				</rule>
				<!-- Append a trailing slash for directories -->
				<rule name="wwwroot-missing-trailing-slash-redirect" stopProcessing="true">
					<match url="^([^.]*[^\/])$" />
					<conditions>
						<add input="{DOCUMENT_ROOT}\wwwroot\{R:1}\index.html" matchType="IsFile" />
					</conditions>
					<action type="Redirect" url="https://{HTTP_HOST}/{R:1}/" />
				</rule>
				<!--
          Route static files into the wwwroot folder directly as it's faster, but only when they exist.
          This means paths that don't map to physical files can fallback to be handled by the .NET Core app
          -->
				<rule name="wwwroot-index-rewrite" stopProcessing="true">
					<match url="([^.]*)" />
					<conditions>
						<add input="{DOCUMENT_ROOT}\wwwroot\{R:1}index.html" matchType="IsFile" />
					</conditions>
					<action type="Rewrite" url="wwwroot/{R:1}/index.html" />
				</rule>
				<rule name="wwwroot-rewrite" stopProcessing="true">
					<match url="(.*\.[^.]+)" />
					<conditions>
						<add input="{DOCUMENT_ROOT}\wwwroot\{R:1}" matchType="IsFile" />
					</conditions>
					<action type="Rewrite" url="wwwroot/{R:1}" />
				</rule>
			</rules>
			<outboundRules>
				<!-- Add cache headers for static files as per Gatsby's static file caching https://www.gatsbyjs.com/docs/caching/ -->
				<rule name="long-cache-static-files" preCondition="is-long-cache-file" stopProcessing="true">
					<match serverVariable="RESPONSE_CACHE-CONTROL" pattern=".*" />
					<action type="Rewrite" value="public,immutable,max-age=31536000" />
				</rule>
				<rule name="no-cache-static-files" preCondition="is-no-cache-file" stopProcessing="true">
					<match serverVariable="RESPONSE_CACHE-CONTROL" pattern=".*" />
					<!-- Small, but non-zero cache time: service worker sometimes re-requests files straight after page load so 30 seconds should be enough to stop another request -->
					<action type="Rewrite" value="public,must-revalidate,max-age=30" />
				</rule>
				<preConditions>
					<preCondition name="is-no-cache-file" logicalGrouping="MatchAny">
						<add input="{REQUEST_URI}" pattern="(.*\.html)|(sw\.js)|(app\-data\.json)|(page\-data\.json)" />
					</preCondition>
					<preCondition name="is-long-cache-file" logicalGrouping="MatchAny">
						<add input="{REQUEST_URI}" pattern=".*\.(?:css|js)$" />
						<add input="{REQUEST_URI}" pattern="^/wwwroot/static" />
					</preCondition>
				</preConditions>
			</outboundRules>
		</rewrite>
		<urlCompression doDynamicCompression="true" doStaticCompression="true" />
		<httpCompression minFileSizeForComp="512">
			<!-- Static files are cached so use highest compression levels -->
			<scheme name="br" dll="%ProgramFiles%\IIS\IIS Compression\iisbrotli.dll" staticCompressionLevel="11" dynamicCompressionLevel="5" />
			<scheme name="gzip" dll="%ProgramFiles%\IIS\IIS Compression\iiszlib.dll" staticCompressionLevel="9" dynamicCompressionLevel="5" />
			<staticTypes>
				<add enabled="true" mimeType="application/json"/>
				<add enabled="true" mimeType="application/json; charset=utf-8" />
			</staticTypes>
			<dynamicTypes>
				<add enabled="true" mimeType="application/json"/>
				<add enabled="true" mimeType="application/json; charset=utf-8" />
			</dynamicTypes>
		</httpCompression>
		<httpProtocol>
			<customHeaders>
				<remove name="X-Powered-By" />
				<add name="Link" value="&lt;https://apikeys.civiccomputing.com&gt;; rel=preconnect; crossorigin,&lt;https://www.googletagmanager.com&gt;; rel=preconnect,&lt;https://cdn.nice.org.uk/cookie-banner/cookie-banner.min.js&gt;; rel=preload; as=script"/>
				<add name="X-Frame-Options" value="SAMEORIGIN" />
				<add name="X-Xss-Protection" value="1; mode=block" />
				<add name="X-Content-Type-Options" value="nosniff" />
				<add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
				<add name="Content-Security-Policy" value="frame-ancestors 'self';" />
			</customHeaders>
		</httpProtocol>
		<security>
			<!-- TODO: Reinstate removeServerHeader when we've upgraded to IIS 10 in production -->
			<!-- <requestFiltering removeServerHeader="true" /> -->
		</security>
		<modules>
			<!-- Remove unused modules as per https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/iis/modules?view=aspnetcore-3.1 for a small perf benefit -->
			<remove name="TokenCacheModule"/>
			<remove name="Session"/>
			<remove name="WindowsAuthenticatio"/>
			<remove name="FormsAuthentication"/>
			<remove name="DefaultAuthentication"/>
			<remove name="RoleManager"/>
			<remove name="UrlAuthorization"/>
			<remove name="FileAuthorization"/>
			<remove name="AnonymousIdentification"/>
			<remove name="Profile"/>
			<remove name="UrlMappingsModule"/>
			<remove name="UrlRoutingModule-4.0"/>
			<remove name="ScriptModule-4.0"/>
		</modules>
	</system.webServer>
</configuration>
